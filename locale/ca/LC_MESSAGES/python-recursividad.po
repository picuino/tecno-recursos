#
# Copyright (C) 2013-2025, Carlos Félix Pardo Martín
# This file is distributed under the Creative Commons BY-SA 4.0 License
# https://creativecommons.org/licenses/by-sa/4.0/deed.en
#

msgid ""
msgstr ""
"Project-Id-Version:Picuino 2025"
"Report-Msgid-Bugs-To:"
"POT-Creation-Date:2025-01-13 17:26+0100"
"PO-Revision-Date:YEAR-MO-DA HO:MI+ZONE"
"Last-Translator:FULL NAME <EMAIL@ADDRESS>"
"Language:ca"
"Language-Team:ca <LL@li.org>"
"Plural-Forms:nplurals=2; plural=(n != 1)"
"MIME-Version:1.0"
"Content-Type:text/plain; charset=utf-8"
"Content-Transfer-Encoding:8bit"
"Generated-By:Babel 2.9.0"


#: ../../source/python-recursividad.rst:9
msgid "Recursividad"
msgstr "Recursió"

#: ../../source/python-recursividad.rst:10
msgid ""
"La recursividad es una técnica de programación que consiste en que una "
"función se llame a sí misma para resolver un problema. Esta técnica permite "
"dividir un problema original en subproblemas semejantes pero más sencillos "
"de solucionar."
msgstr ""
"La recursivitat és una tècnica de programació que consisteix en una funció "
"que es diu per resoldre un problema. Aquesta tècnica permet dividir un "
"problema original en subproblemes similars però més simples."

#: ../../source/python-recursividad.rst:15
msgid "Una función recursiva se compone de dos partes:"
msgstr "Una funció recursiva consta de dues parts:"

#: ../../source/python-recursividad.rst:17
msgid "Solución del caso más sencillo o caso base."
msgstr "Solució de la caixa més senzilla o del cas base."

#: ../../source/python-recursividad.rst:19
msgid ""
"Si la función tiene como argumento un problema sencillo de resolver, se "
"resuelve y se devuelve la solución. En este caso la función no se llama a sí"
" misma."
msgstr ""
"Si la funció discuteix un problema senzill a resoldre, la solució es resol i"
" es torna. En aquest cas, la funció no es diu."

#: ../../source/python-recursividad.rst:23
msgid "Solución del caso más elaborado."
msgstr "Solució del cas més elaborat."

#: ../../source/python-recursividad.rst:25
msgid ""
"Si la función tiene como argumento un problema difícil de resolver, el "
"problema se divide en problemas más pequeños y sencillos y se llama a sí "
"misma para resolverlos."
msgstr ""
"Si la funció té com a argument un problema difícil de resoldre, el problema "
"es divideix en problemes més petits i senzills i es crida a solucionar -los."

#: ../../source/python-recursividad.rst:29
msgid ""
"Ejemplo de función recursiva para calcular el factorial de un número. El "
"factorial de un número es la multiplicación de todos los números desde el 1 "
"hasta el número deseado. Por ejemplo, el factorial de 6 es la multiplicación"
" de 1 x 2 x 3 x 4 x 5 x 6."
msgstr ""
"Exemple de funció recursiva per calcular el factorial d’un nombre. El "
"factorial d’un nombre és la multiplicació de tots els números d’1 al número "
"desitjat. Per exemple, el factorial de 6 és la multiplicació d’1 x 2 x 3 x 4"
" x 5 x 6."

#: ../../source/python-recursividad.rst:34
msgid ""
"El siguiente programa calcula el factorial de un número de forma recursiva::"
msgstr "El programa següent calcula el factorial d’un número recursiu ::"

#: ../../source/python-recursividad.rst:48
msgid ""
"El siguiente programa devuelve una cadena de texto invertida de forma "
"recursiva::"
msgstr ""
"El programa següent retorna recursivament una cadena de text invertida ::"

#: ../../source/python-recursividad.rst:61

#: ../../source/python-recursividad.rst:87

#: ../../source/python-recursividad.rst:106

#: ../../source/python-recursividad.rst:137
msgid "Salida::"
msgstr "Sortida ::"

#: ../../source/python-recursividad.rst:66
msgid ""
"A la hora de programar una función recursiva es importante definir los casos"
" más sencillos o casos base y asegurarse de que cada llamada recursiva se "
"acerque al caso base para evitar bucles infinitos."
msgstr ""
"Quan es programi una funció recursiva, és important definir els casos o "
"casos base més simples i assegurar -se que cada trucada recursiva s’acosta "
"al cas base per evitar bucles infinits."

#: ../../source/python-recursividad.rst:70
msgid ""
"Algunas estructuras de datos, como las listas enlazadas, los árboles, o los "
"directorios del disco duro, se pueden definir y manipular de forma recursiva"
" de manera más simple."
msgstr ""
"Algunes estructures de dades, com ara llistes enllaçades, arbres o "
"directoris de disc dur, es poden definir i manipular recursivament més "
"senzillament."

#: ../../source/python-recursividad.rst:76
msgid "Ejercicios"
msgstr "Exercicis"

#: ../../source/python-recursividad.rst:78
msgid ""
"Define una función recursiva que convierta una lista de letras en una cadena"
" de texto única::"
msgstr ""
"Definiu una funció recursiva que converteixi una llista de lletres en una "
"sola cadena de text ::"

#: ../../source/python-recursividad.rst:92
msgid ""
"Define una función recursiva que cuente hacia atrás desde el número que se "
"le pase como argumento."
msgstr ""
"Definiu una funció recursiva que compta del número que passa com a argument."

#: ../../source/python-recursividad.rst:95

#: ../../source/python-recursividad.rst:125

#: ../../source/python-recursividad.rst:149
msgid "Pista::"
msgstr "Pista ::"

#: ../../source/python-recursividad.rst:121
msgid ""
"Define una función recursiva llamada replicar que reciba dos argumentos "
"``veces`` y ``numero``. La función debe devolver una lista en la que "
"aparezca ``numero`` tantas veces como diga la variable ``veces``."
msgstr ""
"Definiu una funció recursiva anomenada Replicing que rebeu dos arguments `` "
"Times's` i `` número ''. La funció ha de retornar una llista que aparegui ``"
" number '' tantes vegades com diu la variable '`« temps' '."

#: ../../source/python-recursividad.rst:142
msgid ""
"Define una función recursiva que invierta el orden de los dígitos de un "
"número sin convertirlo en una cadena."
msgstr ""
"Definiu una funció recursiva que inverteixi l’ordre dels dígits d’un número "
"sense convertir -la en una cadena."

#: ../../source/python-recursividad.rst:145
msgid ""
"Para obtener el último dígito de un número se puede calcular el módulo 10 "
"del número. Por ejemplo, 1234 % 10 será igual a 4, el último dígito del "
"número 1234."
msgstr ""
"Per obtenir l'últim dígit d'un número, podeu calcular el mòdul 10 del "
"número. Per exemple, el 1234 % 10 serà igual a 4, l’últim dígit del número "
"1234."
