# HELP
#   object: dependencies
#   $@ object
#   $^ dependencies
#   $< first element of dependencies list

IMGDIR=_images
SOURCES=_sources

LIBS=$(wildcard _symbol_lib/*) $(wildcard Licen*)

JOINPDF=gswin32.exe -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite
PDFTOPNG=pdftopng -cfg /Bin/xpdf/.xpdfrc -gray -r 600 -aa yes -aaVector yes -freetype yes
OPTIPNG=optipng -quiet -o 6
CONVERT=convert
CONVERT_OPT=-transparent White
MOGRIFY=mogrify
ZIP=7z a


# --------------------------------------------------------------------
# electric-symbols-names
#
$(IMGDIR)/electric-symbols-names-p1.png \
$(IMGDIR)/electric-symbols-names-p2.png \
$(IMGDIR)/electric-symbols-names-p3.png: electric-symbols-names.pdf
	$(PDFTOPNG) $< $(basename $<)
	mv $(basename $<)-000001.png  $(IMGDIR)/$(basename $<)-p1.png
	mv $(basename $<)-000002.png  $(IMGDIR)/$(basename $<)-p2.png
	mv $(basename $<)-000003.png  $(IMGDIR)/$(basename $<)-p3.png
	$(MOGRIFY) -posterize 16 $(IMGDIR)/$(basename $<)-p1.png
	$(MOGRIFY) -posterize 16 $(IMGDIR)/$(basename $<)-p2.png
	$(MOGRIFY) -posterize 16 $(IMGDIR)/$(basename $<)-p3.png
	$(OPTIPNG) $@

$(IMGDIR)/electric-simbolos-receptores.en.png: \
	$(IMGDIR)/electric-symbols-names-p1.png
	$(eval crop = $(shell python3 -c "import sys; \
	((x0,y0),(x1,y1))=eval(sys.argv[1]);\
	print('%dx%d+%d+%d' % \
	(abs(x0-x1),abs(y0-y1),min(x0,x1),min(y0,y1)))" \
	"((116,1977),(1683,3333))" ))
	$(CONVERT) $^ -crop $(crop) $(CONVERT_OPT) $@
	$(OPTIPNG) $@

electric-symbols-names.zip: $(LIBS) $(wildcard electric-symbols-names/*)
	rm -f $@  electric-symbols-names/*.*bak
	$(ZIP) $@ $^


.PHONY: all-symbols-names  clean-symbols-names
all-symbols-names: \
	electric-symbols-names.zip \
	$(IMGDIR)/electric-symbols-names-p1.png \
	$(IMGDIR)/electric-symbols-names-p2.png \
	$(IMGDIR)/electric-symbols-names-p3.png \
	$(IMGDIR)/electric-simbolos-receptores.en.png \


clean-symbols-names:
	rm -f electric-symbols-names.zip
	rm -f $(IMGDIR)/electric-symbols-names-p1.png
	rm -f $(IMGDIR)/electric-symbols-names-p2.png
	rm -f $(IMGDIR)/electric-symbols-names-p3.png
	rm -f $(IMGDIR)/electric-simbolos-receptores.en.png


# --------------------------------------------------------------------
# electric-symbols-images
#
SYMBOLS_SOURCE=electric-symbols-names-p1.png
SYMBOL_BASENAME=electric-symbol
SYMBOL_NAMES=$(foreach symbol, \
	battery ac-generator transformer bulb-lamp motor resistor \
	buzzer loudspeaker capacitor-pol capacitor inductor voltmeter \
	ammeter switch double-throw-switch no-push-button nc-push-button \
	limit-switch fuse relay relay-contact connector wire-no-connected \
	wire-connected earth-ground chassis-ground diode diode-led npn \
	pnp operational-amplifier potentiometer resistor-ntc resistor-ldr \
	gate-and gate-or gate-not gate-nand gate-nor gate-xor,\
	$(SYMBOL_BASENAME)-$(symbol).png)
SYMBOL_DIRNAMES=$(foreach symbol, $(SYMBOL_NAMES),$(IMGDIR)/$(symbol))

define crop_symbol
	$(eval geometry = $(shell python3 -c "import sys; (x,y)=eval(sys.argv[1]); \
	print('526x346+%d+%d'%(x, 458+(360*(y-1))))" $(1)))
	$(CONVERT) $(IMGDIR)/$(SYMBOLS_SOURCE) -crop $(geometry) +repage \
		$(CONVERT_OPT) $(IMGDIR)/$(SYMBOL_BASENAME)-$(strip $(2)).png
	$(OPTIPNG) $(IMGDIR)/$(SYMBOL_BASENAME)-$(strip $(2)).png
endef

$(SYMBOL_DIRNAMES): $(IMGDIR)/$(SYMBOLS_SOURCE)
	echo $(SYMBOL_NAMES)
	$(call crop_symbol, "(126,  1)", battery)
	$(call crop_symbol, "(126,  2)", ac-generator)
	$(call crop_symbol, "(126,  3)", transformer)
	$(call crop_symbol, "(126,  6)", bulb-lamp)
	$(call crop_symbol, "(126,  7)", motor)
	$(call crop_symbol, "(126,  8)", resistor)
	$(call crop_symbol, "(126,  9)", buzzer)
	$(call crop_symbol, "(126, 10)", loudspeaker)
	$(call crop_symbol, "(126, 11)", capacitor-pol)
	$(call crop_symbol, "(126, 12)", capacitor)
	$(call crop_symbol, "(126, 13)", inductor)
	$(call crop_symbol, "(126, 16)", voltmeter)
	$(call crop_symbol, "(126, 17)", ammeter)

	$(call crop_symbol, "(1716,  1)", switch)
	$(call crop_symbol, "(1716,  2)", double-throw-switch)
	$(call crop_symbol, "(1716,  3)", no-push-button)
	$(call crop_symbol, "(1716,  4)", nc-push-button)
	$(call crop_symbol, "(1716,  5)", limit-switch)
	$(call crop_symbol, "(1716,  6)", fuse)
	$(call crop_symbol, "(1716,  7)", relay)
	$(call crop_symbol, "(1716,  8)", relay-contact)
	$(call crop_symbol, "(1716, 11)", connector)
	$(call crop_symbol, "(1716, 12)", wire-no-connected)
	$(call crop_symbol, "(1716, 13)", wire-connected)
	$(call crop_symbol, "(1716, 14)", earth-ground)
	$(call crop_symbol, "(1716, 15)", chassis-ground)

	$(call crop_symbol, "(3306,  1)", diode)
	$(call crop_symbol, "(3306,  2)", diode-led)
	$(call crop_symbol, "(3306,  3)", npn)
	$(call crop_symbol, "(3306,  4)", pnp)
	$(call crop_symbol, "(3306,  5)", operational-amplifier)
	$(call crop_symbol, "(3306,  7)", potentiometer)
	$(call crop_symbol, "(3306,  8)", resistor-ntc)
	$(call crop_symbol, "(3306,  9)", resistor-ldr)
	$(call crop_symbol, "(3306, 12)", gate-and)
	$(call crop_symbol, "(3306, 13)", gate-or)
	$(call crop_symbol, "(3306, 14)", gate-not)
	$(call crop_symbol, "(3306, 15)", gate-nand)
	$(call crop_symbol, "(3306, 16)", gate-nor)
	$(call crop_symbol, "(3306, 17)", gate-xor)


electric-symbols-images.zip: $(SYMBOL_DIRNAMES)
	rm -f $@
	$(ZIP) $@ $^


.PHONY: all-symbols-images  clean-symbols-images
all-symbols-images: \
	$(SYMBOL_DIRNAMES) \
	electric-symbols-images.zip \


clean-symbols-images:
	rm -f $(SYMBOL_DIRNAMES)
	rm -f electric-symbols-images.zip


# --------------------------------------------------------------------
# make all and clean
#
.PHONY: all clean
all: \
	all-symbols-names \
	all-symbols-images \


clean: \
	clean-symbols-names \
	clean-symbols-images \
